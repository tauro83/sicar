CREATE TABLE cliente (cli_id BIGINT UNIQUE AUTO_INCREMENT, cli_identificacion VARCHAR(13) NOT NULL UNIQUE, cli_nombre VARCHAR(255), cli_apellido VARCHAR(255), cli_direccion VARCHAR(255), cli_celular VARCHAR(9), cli_telefono VARCHAR(11), cli_correo VARCHAR(255), cli_estado TINYINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(cli_id)) ENGINE = INNODB;
CREATE TABLE detalle_documento_de_facturacion (det_id BIGINT UNIQUE AUTO_INCREMENT, det_codigo VARCHAR(10), det_cantidad INT, det_descripcion VARCHAR(255), det_valor_unitario DECIMAL(6, 2), det_valor_total DECIMAL(6, 2), det_documento_id BIGINT, det_producto_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX det_documento_id_idx (det_documento_id), INDEX det_producto_id_idx (det_producto_id), PRIMARY KEY(det_id)) ENGINE = INNODB;
CREATE TABLE documento_de_facturacion (doc_id BIGINT UNIQUE AUTO_INCREMENT, doc_codigo VARCHAR(10) UNIQUE, doc_fecha_emision DATETIME, doc_cliente_id BIGINT, doc_proveedor_id BIGINT, doc_responsable VARCHAR(255), doc_sub_total DECIMAL(6, 2), doc_total_documento DECIMAL(6, 2), doc_iva DECIMAL(6, 2), doc_tipo TINYINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX doc_cliente_id_idx (doc_cliente_id), INDEX doc_proveedor_id_idx (doc_proveedor_id), PRIMARY KEY(doc_id)) ENGINE = INNODB;
CREATE TABLE producto (pro_id BIGINT UNIQUE AUTO_INCREMENT, pro_codigo VARCHAR(10) NOT NULL UNIQUE, pro_nombre VARCHAR(255), pro_descripcion VARCHAR(255), pro_marca VARCHAR(100), pro_categoria VARCHAR(100), pro_stock BIGINT, pro_estado TINYINT, pro_ultima_venta DATETIME, pro_ultima_compra DATETIME, pro_precio_unitario DECIMAL(6, 2), pro_precio_nota_venta DECIMAL(6, 2), pro_precio_factura DECIMAL(6, 2), pro_bodega TINYINT, pro_origen VARCHAR(4), pro_ultimo_proveedor_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX pro_ultimo_proveedor_id_idx (pro_ultimo_proveedor_id), PRIMARY KEY(pro_id)) ENGINE = INNODB;
CREATE TABLE proveedor (prv_id BIGINT UNIQUE AUTO_INCREMENT, prv_ruc VARCHAR(13), prv_nombre VARCHAR(255), prv_direccion VARCHAR(255), prv_telefono VARCHAR(11), prv_correo VARCHAR(20), prv_estado TINYINT, prv_fax BIGINT, prv_responsable VARCHAR(255), prv_fecha_ingreso DATETIME, prv_nombre_banco VARCHAR(255), prv_numero_cuenta VARCHAR(13), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(prv_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE detalle_documento_de_facturacion ADD CONSTRAINT detalle_documento_de_facturacion_det_producto_id_producto_pro_id FOREIGN KEY (det_producto_id) REFERENCES producto(pro_id);
ALTER TABLE detalle_documento_de_facturacion ADD CONSTRAINT dddd FOREIGN KEY (det_documento_id) REFERENCES documento_de_facturacion(doc_id);
ALTER TABLE documento_de_facturacion ADD CONSTRAINT documento_de_facturacion_doc_proveedor_id_proveedor_prv_id FOREIGN KEY (doc_proveedor_id) REFERENCES proveedor(prv_id);
ALTER TABLE documento_de_facturacion ADD CONSTRAINT documento_de_facturacion_doc_cliente_id_cliente_cli_id FOREIGN KEY (doc_cliente_id) REFERENCES cliente(cli_id);
ALTER TABLE producto ADD CONSTRAINT producto_pro_ultimo_proveedor_id_proveedor_prv_id FOREIGN KEY (pro_ultimo_proveedor_id) REFERENCES proveedor(prv_id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
