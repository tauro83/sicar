<?php

/**
 * BaseProducto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $pro_id
 * @property string $pro_codigo
 * @property string $pro_nombre
 * @property string $pro_descripcion
 * @property string $pro_marca
 * @property string $pro_categoria
 * @property integer $pro_stock
 * @property integer $pro_estado
 * @property timestamp $pro_ultima_venta
 * @property timestamp $pro_ultima_compra
 * @property decimal $pro_precio_unitario
 * @property decimal $pro_precio_nota_venta
 * @property decimal $pro_precio_factura
 * @property integer $pro_bodega
 * @property string $pro_origen
 * @property integer $pro_ultimo_proveedor_id
 * @property Proveedor $Proveedor
 * @property DetalleDocumentoDeFacturacion $DetalleProducto
 * 
 * @method integer                       getProId()                   Returns the current record's "pro_id" value
 * @method string                        getProCodigo()               Returns the current record's "pro_codigo" value
 * @method string                        getProNombre()               Returns the current record's "pro_nombre" value
 * @method string                        getProDescripcion()          Returns the current record's "pro_descripcion" value
 * @method string                        getProMarca()                Returns the current record's "pro_marca" value
 * @method string                        getProCategoria()            Returns the current record's "pro_categoria" value
 * @method integer                       getProStock()                Returns the current record's "pro_stock" value
 * @method integer                       getProEstado()               Returns the current record's "pro_estado" value
 * @method timestamp                     getProUltimaVenta()          Returns the current record's "pro_ultima_venta" value
 * @method timestamp                     getProUltimaCompra()         Returns the current record's "pro_ultima_compra" value
 * @method decimal                       getProPrecioUnitario()       Returns the current record's "pro_precio_unitario" value
 * @method decimal                       getProPrecioNotaVenta()      Returns the current record's "pro_precio_nota_venta" value
 * @method decimal                       getProPrecioFactura()        Returns the current record's "pro_precio_factura" value
 * @method integer                       getProBodega()               Returns the current record's "pro_bodega" value
 * @method string                        getProOrigen()               Returns the current record's "pro_origen" value
 * @method integer                       getProUltimoProveedorId()    Returns the current record's "pro_ultimo_proveedor_id" value
 * @method Proveedor                     getProveedor()               Returns the current record's "Proveedor" value
 * @method DetalleDocumentoDeFacturacion getDetalleProducto()         Returns the current record's "DetalleProducto" value
 * @method Producto                      setProId()                   Sets the current record's "pro_id" value
 * @method Producto                      setProCodigo()               Sets the current record's "pro_codigo" value
 * @method Producto                      setProNombre()               Sets the current record's "pro_nombre" value
 * @method Producto                      setProDescripcion()          Sets the current record's "pro_descripcion" value
 * @method Producto                      setProMarca()                Sets the current record's "pro_marca" value
 * @method Producto                      setProCategoria()            Sets the current record's "pro_categoria" value
 * @method Producto                      setProStock()                Sets the current record's "pro_stock" value
 * @method Producto                      setProEstado()               Sets the current record's "pro_estado" value
 * @method Producto                      setProUltimaVenta()          Sets the current record's "pro_ultima_venta" value
 * @method Producto                      setProUltimaCompra()         Sets the current record's "pro_ultima_compra" value
 * @method Producto                      setProPrecioUnitario()       Sets the current record's "pro_precio_unitario" value
 * @method Producto                      setProPrecioNotaVenta()      Sets the current record's "pro_precio_nota_venta" value
 * @method Producto                      setProPrecioFactura()        Sets the current record's "pro_precio_factura" value
 * @method Producto                      setProBodega()               Sets the current record's "pro_bodega" value
 * @method Producto                      setProOrigen()               Sets the current record's "pro_origen" value
 * @method Producto                      setProUltimoProveedorId()    Sets the current record's "pro_ultimo_proveedor_id" value
 * @method Producto                      setProveedor()               Sets the current record's "Proveedor" value
 * @method Producto                      setDetalleProducto()         Sets the current record's "DetalleProducto" value
 * 
 * @package    SICAR
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProducto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('producto');
        $this->hasColumn('pro_id', 'integer', 6, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'unique' => true,
             'length' => 6,
             ));
        $this->hasColumn('pro_codigo', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 10,
             ));
        $this->hasColumn('pro_nombre', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('pro_descripcion', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('pro_marca', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('pro_categoria', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('pro_stock', 'integer', 6, array(
             'type' => 'integer',
             'length' => 6,
             ));
        $this->hasColumn('pro_estado', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('pro_ultima_venta', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('pro_ultima_compra', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('pro_precio_unitario', 'decimal', 6, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 6,
             ));
        $this->hasColumn('pro_precio_nota_venta', 'decimal', 6, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 6,
             ));
        $this->hasColumn('pro_precio_factura', 'decimal', 6, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 6,
             ));
        $this->hasColumn('pro_bodega', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('pro_origen', 'string', 4, array(
             'type' => 'string',
             'length' => 4,
             ));
        $this->hasColumn('pro_ultimo_proveedor_id', 'integer', 6, array(
             'type' => 'integer',
             'length' => 6,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Proveedor', array(
             'local' => 'pro_ultimo_proveedor_id',
             'foreign' => 'prv_id'));

        $this->hasOne('DetalleDocumentoDeFacturacion as DetalleProducto', array(
             'local' => 'pro_id',
             'foreign' => 'det_producto_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}